<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /QE8p8uz31zrFgAAAABJRU5ErkJggg==
</value>
  </data>
</root>